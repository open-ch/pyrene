{"version":3,"file":"index.umd.js","sources":["../src/constants.js","../src/utils.js","../src/server.js","../src/Provider.js","../src/client.js","../src/Dispatcher.js","../src/index.js"],"sourcesContent":["export const TAG_PROPERTIES = {\n  CHARSET: 'charset',\n  CSS_TEXT: 'cssText',\n  HREF: 'href',\n  HTTPEQUIV: 'http-equiv',\n  INNER_HTML: 'innerHTML',\n  ITEM_PROP: 'itemprop',\n  NAME: 'name',\n  PROPERTY: 'property',\n  REL: 'rel',\n  SRC: 'src',\n};\n\nexport const ATTRIBUTE_NAMES = {\n  BODY: 'bodyAttributes',\n  HTML: 'htmlAttributes',\n  TITLE: 'titleAttributes',\n};\n\nexport const TAG_NAMES = {\n  BASE: 'base',\n  BODY: 'body',\n  HEAD: 'head',\n  HTML: 'html',\n  LINK: 'link',\n  META: 'meta',\n  NOSCRIPT: 'noscript',\n  SCRIPT: 'script',\n  STYLE: 'style',\n  TITLE: 'title',\n  FRAGMENT: 'Symbol(react.fragment)',\n};\n\nexport const SEO_PRIORITY_TAGS = {\n  link: { rel: ['amphtml', 'canonical', 'alternate'] },\n  script: { type: ['application/ld+json'] },\n  meta: {\n    charset: '',\n    name: ['robots', 'description'],\n    property: [\n      'og:type',\n      'og:title',\n      'og:url',\n      'og:image',\n      'og:image:alt',\n      'og:description',\n      'twitter:url',\n      'twitter:title',\n      'twitter:description',\n      'twitter:image',\n      'twitter:image:alt',\n      'twitter:card',\n      'twitter:site',\n    ],\n  },\n};\n\nexport const VALID_TAG_NAMES = Object.keys(TAG_NAMES).map(name => TAG_NAMES[name]);\n\nexport const REACT_TAG_MAP = {\n  accesskey: 'accessKey',\n  charset: 'charSet',\n  class: 'className',\n  contenteditable: 'contentEditable',\n  contextmenu: 'contextMenu',\n  'http-equiv': 'httpEquiv',\n  itemprop: 'itemProp',\n  tabindex: 'tabIndex',\n};\n\nexport const HTML_TAG_MAP = Object.keys(REACT_TAG_MAP).reduce((obj, key) => {\n  obj[REACT_TAG_MAP[key]] = key;\n  return obj;\n}, {});\n\nexport const HELMET_ATTRIBUTE = 'data-rh';\n","import { TAG_NAMES, TAG_PROPERTIES, ATTRIBUTE_NAMES } from './constants';\n\nconst HELMET_PROPS = {\n  DEFAULT_TITLE: 'defaultTitle',\n  DEFER: 'defer',\n  ENCODE_SPECIAL_CHARACTERS: 'encodeSpecialCharacters',\n  ON_CHANGE_CLIENT_STATE: 'onChangeClientState',\n  TITLE_TEMPLATE: 'titleTemplate',\n  PRIORITIZE_SEO_TAGS: 'prioritizeSeoTags',\n};\n\nconst getInnermostProperty = (propsList, property) => {\n  for (let i = propsList.length - 1; i >= 0; i -= 1) {\n    const props = propsList[i];\n\n    if (Object.prototype.hasOwnProperty.call(props, property)) {\n      return props[property];\n    }\n  }\n\n  return null;\n};\n\nconst getTitleFromPropsList = propsList => {\n  let innermostTitle = getInnermostProperty(propsList, TAG_NAMES.TITLE);\n  const innermostTemplate = getInnermostProperty(propsList, HELMET_PROPS.TITLE_TEMPLATE);\n  if (Array.isArray(innermostTitle)) {\n    innermostTitle = innermostTitle.join('');\n  }\n  if (innermostTemplate && innermostTitle) {\n    // use function arg to avoid need to escape $ characters\n    return innermostTemplate.replace(/%s/g, () => innermostTitle);\n  }\n\n  const innermostDefaultTitle = getInnermostProperty(propsList, HELMET_PROPS.DEFAULT_TITLE);\n\n  return innermostTitle || innermostDefaultTitle || undefined;\n};\n\nconst getOnChangeClientState = propsList =>\n  getInnermostProperty(propsList, HELMET_PROPS.ON_CHANGE_CLIENT_STATE) || (() => {});\n\nconst getAttributesFromPropsList = (tagType, propsList) =>\n  propsList\n    .filter(props => typeof props[tagType] !== 'undefined')\n    .map(props => props[tagType])\n    .reduce((tagAttrs, current) => ({ ...tagAttrs, ...current }), {});\n\nconst getBaseTagFromPropsList = (primaryAttributes, propsList) =>\n  propsList\n    .filter(props => typeof props[TAG_NAMES.BASE] !== 'undefined')\n    .map(props => props[TAG_NAMES.BASE])\n    .reverse()\n    .reduce((innermostBaseTag, tag) => {\n      if (!innermostBaseTag.length) {\n        const keys = Object.keys(tag);\n\n        for (let i = 0; i < keys.length; i += 1) {\n          const attributeKey = keys[i];\n          const lowerCaseAttributeKey = attributeKey.toLowerCase();\n\n          if (\n            primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 &&\n            tag[lowerCaseAttributeKey]\n          ) {\n            return innermostBaseTag.concat(tag);\n          }\n        }\n      }\n\n      return innermostBaseTag;\n    }, []);\n\n// eslint-disable-next-line no-console\nconst warn = msg => console && typeof console.warn === 'function' && console.warn(msg);\n\nconst getTagsFromPropsList = (tagName, primaryAttributes, propsList) => {\n  // Calculate list of tags, giving priority innermost component (end of the propslist)\n  const approvedSeenTags = {};\n\n  return propsList\n    .filter(props => {\n      if (Array.isArray(props[tagName])) {\n        return true;\n      }\n      if (typeof props[tagName] !== 'undefined') {\n        warn(\n          `Helmet: ${tagName} should be of type \"Array\". Instead found type \"${typeof props[\n            tagName\n          ]}\"`\n        );\n      }\n      return false;\n    })\n    .map(props => props[tagName])\n    .reverse()\n    .reduce((approvedTags, instanceTags) => {\n      const instanceSeenTags = {};\n\n      instanceTags\n        .filter(tag => {\n          let primaryAttributeKey;\n          const keys = Object.keys(tag);\n          for (let i = 0; i < keys.length; i += 1) {\n            const attributeKey = keys[i];\n            const lowerCaseAttributeKey = attributeKey.toLowerCase();\n\n            // Special rule with link tags, since rel and href are both primary tags, rel takes priority\n            if (\n              primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 &&\n              !(\n                primaryAttributeKey === TAG_PROPERTIES.REL &&\n                tag[primaryAttributeKey].toLowerCase() === 'canonical'\n              ) &&\n              !(\n                lowerCaseAttributeKey === TAG_PROPERTIES.REL &&\n                tag[lowerCaseAttributeKey].toLowerCase() === 'stylesheet'\n              )\n            ) {\n              primaryAttributeKey = lowerCaseAttributeKey;\n            }\n            // Special case for innerHTML which doesn't work lowercased\n            if (\n              primaryAttributes.indexOf(attributeKey) !== -1 &&\n              (attributeKey === TAG_PROPERTIES.INNER_HTML ||\n                attributeKey === TAG_PROPERTIES.CSS_TEXT ||\n                attributeKey === TAG_PROPERTIES.ITEM_PROP)\n            ) {\n              primaryAttributeKey = attributeKey;\n            }\n          }\n\n          if (!primaryAttributeKey || !tag[primaryAttributeKey]) {\n            return false;\n          }\n\n          const value = tag[primaryAttributeKey].toLowerCase();\n\n          if (!approvedSeenTags[primaryAttributeKey]) {\n            approvedSeenTags[primaryAttributeKey] = {};\n          }\n\n          if (!instanceSeenTags[primaryAttributeKey]) {\n            instanceSeenTags[primaryAttributeKey] = {};\n          }\n\n          if (!approvedSeenTags[primaryAttributeKey][value]) {\n            instanceSeenTags[primaryAttributeKey][value] = true;\n            return true;\n          }\n\n          return false;\n        })\n        .reverse()\n        .forEach(tag => approvedTags.push(tag));\n\n      // Update seen tags with tags from this instance\n      const keys = Object.keys(instanceSeenTags);\n      for (let i = 0; i < keys.length; i += 1) {\n        const attributeKey = keys[i];\n        const tagUnion = {\n          ...approvedSeenTags[attributeKey],\n          ...instanceSeenTags[attributeKey],\n        };\n\n        approvedSeenTags[attributeKey] = tagUnion;\n      }\n\n      return approvedTags;\n    }, [])\n    .reverse();\n};\n\nconst getAnyTrueFromPropsList = (propsList, checkedTag) => {\n  if (Array.isArray(propsList) && propsList.length) {\n    for (let index = 0; index < propsList.length; index += 1) {\n      const prop = propsList[index];\n      if (prop[checkedTag]) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nconst reducePropsToState = propsList => ({\n  baseTag: getBaseTagFromPropsList([TAG_PROPERTIES.HREF], propsList),\n  bodyAttributes: getAttributesFromPropsList(ATTRIBUTE_NAMES.BODY, propsList),\n  defer: getInnermostProperty(propsList, HELMET_PROPS.DEFER),\n  encode: getInnermostProperty(propsList, HELMET_PROPS.ENCODE_SPECIAL_CHARACTERS),\n  htmlAttributes: getAttributesFromPropsList(ATTRIBUTE_NAMES.HTML, propsList),\n  linkTags: getTagsFromPropsList(\n    TAG_NAMES.LINK,\n    [TAG_PROPERTIES.REL, TAG_PROPERTIES.HREF],\n    propsList\n  ),\n  metaTags: getTagsFromPropsList(\n    TAG_NAMES.META,\n    [\n      TAG_PROPERTIES.NAME,\n      TAG_PROPERTIES.CHARSET,\n      TAG_PROPERTIES.HTTPEQUIV,\n      TAG_PROPERTIES.PROPERTY,\n      TAG_PROPERTIES.ITEM_PROP,\n    ],\n    propsList\n  ),\n  noscriptTags: getTagsFromPropsList(TAG_NAMES.NOSCRIPT, [TAG_PROPERTIES.INNER_HTML], propsList),\n  onChangeClientState: getOnChangeClientState(propsList),\n  scriptTags: getTagsFromPropsList(\n    TAG_NAMES.SCRIPT,\n    [TAG_PROPERTIES.SRC, TAG_PROPERTIES.INNER_HTML],\n    propsList\n  ),\n  styleTags: getTagsFromPropsList(TAG_NAMES.STYLE, [TAG_PROPERTIES.CSS_TEXT], propsList),\n  title: getTitleFromPropsList(propsList),\n  titleAttributes: getAttributesFromPropsList(ATTRIBUTE_NAMES.TITLE, propsList),\n  prioritizeSeoTags: getAnyTrueFromPropsList(propsList, HELMET_PROPS.PRIORITIZE_SEO_TAGS),\n});\n\nexport const flattenArray = possibleArray =>\n  Array.isArray(possibleArray) ? possibleArray.join('') : possibleArray;\n\nexport { reducePropsToState };\n\nconst checkIfPropsMatch = (props, toMatch) => {\n  const keys = Object.keys(props);\n  for (let i = 0; i < keys.length; i += 1) {\n    // e.g. if rel exists in the list of allowed props [amphtml, alternate, etc]\n    if (toMatch[keys[i]] && toMatch[keys[i]].includes(props[keys[i]])) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport const prioritizer = (elementsList, propsToMatch) => {\n  if (Array.isArray(elementsList)) {\n    return elementsList.reduce(\n      (acc, elementAttrs) => {\n        if (checkIfPropsMatch(elementAttrs, propsToMatch)) {\n          acc.priority.push(elementAttrs);\n        } else {\n          acc.default.push(elementAttrs);\n        }\n        return acc;\n      },\n      { priority: [], default: [] }\n    );\n  }\n  return { default: elementsList };\n};\n","import React from 'react';\nimport {\n  HELMET_ATTRIBUTE,\n  TAG_NAMES,\n  REACT_TAG_MAP,\n  TAG_PROPERTIES,\n  ATTRIBUTE_NAMES,\n  SEO_PRIORITY_TAGS,\n} from './constants';\nimport { flattenArray, prioritizer } from './utils';\n\nconst SELF_CLOSING_TAGS = [TAG_NAMES.NOSCRIPT, TAG_NAMES.SCRIPT, TAG_NAMES.STYLE];\n\nconst encodeSpecialCharacters = (str, encode = true) => {\n  if (encode === false) {\n    return String(str);\n  }\n\n  return String(str)\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#x27;');\n};\n\nconst generateElementAttributesAsString = attributes =>\n  Object.keys(attributes).reduce((str, key) => {\n    const attr = typeof attributes[key] !== 'undefined' ? `${key}=\"${attributes[key]}\"` : `${key}`;\n    return str ? `${str} ${attr}` : attr;\n  }, '');\n\nconst generateTitleAsString = (type, title, attributes, encode) => {\n  const attributeString = generateElementAttributesAsString(attributes);\n  const flattenedTitle = flattenArray(title);\n  return attributeString\n    ? `<${type} ${HELMET_ATTRIBUTE}=\"true\" ${attributeString}>${encodeSpecialCharacters(\n        flattenedTitle,\n        encode\n      )}</${type}>`\n    : `<${type} ${HELMET_ATTRIBUTE}=\"true\">${encodeSpecialCharacters(\n        flattenedTitle,\n        encode\n      )}</${type}>`;\n};\n\nconst generateTagsAsString = (type, tags, encode) =>\n  tags.reduce((str, tag) => {\n    const attributeHtml = Object.keys(tag)\n      .filter(\n        attribute =>\n          !(attribute === TAG_PROPERTIES.INNER_HTML || attribute === TAG_PROPERTIES.CSS_TEXT)\n      )\n      .reduce((string, attribute) => {\n        const attr =\n          typeof tag[attribute] === 'undefined'\n            ? attribute\n            : `${attribute}=\"${encodeSpecialCharacters(tag[attribute], encode)}\"`;\n        return string ? `${string} ${attr}` : attr;\n      }, '');\n\n    const tagContent = tag.innerHTML || tag.cssText || '';\n\n    const isSelfClosing = SELF_CLOSING_TAGS.indexOf(type) === -1;\n\n    return `${str}<${type} ${HELMET_ATTRIBUTE}=\"true\" ${attributeHtml}${\n      isSelfClosing ? `/>` : `>${tagContent}</${type}>`\n    }`;\n  }, '');\n\nconst convertElementAttributesToReactProps = (attributes, initProps = {}) =>\n  Object.keys(attributes).reduce((obj, key) => {\n    obj[REACT_TAG_MAP[key] || key] = attributes[key];\n    return obj;\n  }, initProps);\n\nconst generateTitleAsReactComponent = (type, title, attributes) => {\n  // assigning into an array to define toString function on it\n  const initProps = {\n    key: title,\n    [HELMET_ATTRIBUTE]: true,\n  };\n  const props = convertElementAttributesToReactProps(attributes, initProps);\n\n  return [React.createElement(TAG_NAMES.TITLE, props, title)];\n};\n\nconst generateTagsAsReactComponent = (type, tags) =>\n  tags.map((tag, i) => {\n    const mappedTag = {\n      key: i,\n      [HELMET_ATTRIBUTE]: true,\n    };\n\n    Object.keys(tag).forEach(attribute => {\n      const mappedAttribute = REACT_TAG_MAP[attribute] || attribute;\n\n      if (\n        mappedAttribute === TAG_PROPERTIES.INNER_HTML ||\n        mappedAttribute === TAG_PROPERTIES.CSS_TEXT\n      ) {\n        const content = tag.innerHTML || tag.cssText;\n        mappedTag.dangerouslySetInnerHTML = { __html: content };\n      } else {\n        mappedTag[mappedAttribute] = tag[attribute];\n      }\n    });\n\n    return React.createElement(type, mappedTag);\n  });\n\nconst getMethodsForTag = (type, tags, encode) => {\n  switch (type) {\n    case TAG_NAMES.TITLE:\n      return {\n        toComponent: () =>\n          generateTitleAsReactComponent(type, tags.title, tags.titleAttributes, encode),\n        toString: () => generateTitleAsString(type, tags.title, tags.titleAttributes, encode),\n      };\n    case ATTRIBUTE_NAMES.BODY:\n    case ATTRIBUTE_NAMES.HTML:\n      return {\n        toComponent: () => convertElementAttributesToReactProps(tags),\n        toString: () => generateElementAttributesAsString(tags),\n      };\n    default:\n      return {\n        toComponent: () => generateTagsAsReactComponent(type, tags),\n        toString: () => generateTagsAsString(type, tags, encode),\n      };\n  }\n};\n\nconst getPriorityMethods = ({ metaTags, linkTags, scriptTags, encode }) => {\n  const meta = prioritizer(metaTags, SEO_PRIORITY_TAGS.meta);\n  const link = prioritizer(linkTags, SEO_PRIORITY_TAGS.link);\n  const script = prioritizer(scriptTags, SEO_PRIORITY_TAGS.script);\n\n  // need to have toComponent() and toString()\n  const priorityMethods = {\n    toComponent: () => [\n      ...generateTagsAsReactComponent(TAG_NAMES.META, meta.priority),\n      ...generateTagsAsReactComponent(TAG_NAMES.LINK, link.priority),\n      ...generateTagsAsReactComponent(TAG_NAMES.SCRIPT, script.priority),\n    ],\n    toString: () =>\n      // generate all the tags as strings and concatenate them\n      `${getMethodsForTag(TAG_NAMES.META, meta.priority, encode)} ${getMethodsForTag(\n        TAG_NAMES.LINK,\n        link.priority,\n        encode\n      )} ${getMethodsForTag(TAG_NAMES.SCRIPT, script.priority, encode)}`,\n  };\n\n  return {\n    priorityMethods,\n    metaTags: meta.default,\n    linkTags: link.default,\n    scriptTags: script.default,\n  };\n};\n\nconst mapStateOnServer = props => {\n  const {\n    baseTag,\n    bodyAttributes,\n    encode,\n    htmlAttributes,\n    noscriptTags,\n    styleTags,\n    title = '',\n    titleAttributes,\n    prioritizeSeoTags,\n  } = props;\n  let { linkTags, metaTags, scriptTags } = props;\n  let priorityMethods = {\n    toComponent: () => {},\n    toString: () => '',\n  };\n  if (prioritizeSeoTags) {\n    ({ priorityMethods, linkTags, metaTags, scriptTags } = getPriorityMethods(props));\n  }\n  return {\n    priority: priorityMethods,\n    base: getMethodsForTag(TAG_NAMES.BASE, baseTag, encode),\n    bodyAttributes: getMethodsForTag(ATTRIBUTE_NAMES.BODY, bodyAttributes, encode),\n    htmlAttributes: getMethodsForTag(ATTRIBUTE_NAMES.HTML, htmlAttributes, encode),\n    link: getMethodsForTag(TAG_NAMES.LINK, linkTags, encode),\n    meta: getMethodsForTag(TAG_NAMES.META, metaTags, encode),\n    noscript: getMethodsForTag(TAG_NAMES.NOSCRIPT, noscriptTags, encode),\n    script: getMethodsForTag(TAG_NAMES.SCRIPT, scriptTags, encode),\n    style: getMethodsForTag(TAG_NAMES.STYLE, styleTags, encode),\n    title: getMethodsForTag(TAG_NAMES.TITLE, { title, titleAttributes }, encode),\n  };\n};\n\nexport default mapStateOnServer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport mapStateOnServer from './server';\n\nconst defaultValue = {};\n\nexport const Context = React.createContext(defaultValue);\n\nexport const providerShape = PropTypes.shape({\n  setHelmet: PropTypes.func,\n  helmetInstances: PropTypes.shape({\n    get: PropTypes.func,\n    add: PropTypes.func,\n    remove: PropTypes.func,\n  }),\n});\n\nconst canUseDOM = typeof document !== 'undefined';\n\nexport default class Provider extends Component {\n  static canUseDOM = canUseDOM;\n\n  static propTypes = {\n    context: PropTypes.shape({\n      helmet: PropTypes.shape(),\n    }),\n    children: PropTypes.node.isRequired,\n  };\n\n  static defaultProps = {\n    context: {},\n  };\n\n  static displayName = 'HelmetProvider';\n\n  instances = [];\n\n  value = {\n    setHelmet: serverState => {\n      this.props.context.helmet = serverState;\n    },\n    helmetInstances: {\n      get: () => this.instances,\n      add: instance => {\n        this.instances.push(instance);\n      },\n      remove: instance => {\n        const index = this.instances.indexOf(instance);\n        this.instances.splice(index, 1);\n      },\n    },\n  };\n\n  constructor(props) {\n    super(props);\n\n    if (!Provider.canUseDOM) {\n      props.context.helmet = mapStateOnServer({\n        baseTag: [],\n        bodyAttributes: {},\n        encodeSpecialCharacters: true,\n        htmlAttributes: {},\n        linkTags: [],\n        metaTags: [],\n        noscriptTags: [],\n        scriptTags: [],\n        styleTags: [],\n        title: '',\n        titleAttributes: {},\n      });\n    }\n  }\n\n  render() {\n    return <Context.Provider value={this.value}>{this.props.children}</Context.Provider>;\n  }\n}\n","import { HELMET_ATTRIBUTE, TAG_NAMES, TAG_PROPERTIES } from './constants';\nimport { flattenArray } from './utils';\n\nconst updateTags = (type, tags) => {\n  const headElement = document.head || document.querySelector(TAG_NAMES.HEAD);\n  const tagNodes = headElement.querySelectorAll(`${type}[${HELMET_ATTRIBUTE}]`);\n  const oldTags = [].slice.call(tagNodes);\n  const newTags = [];\n  let indexToDelete;\n\n  if (tags && tags.length) {\n    tags.forEach(tag => {\n      const newElement = document.createElement(type);\n\n      // eslint-disable-next-line\n      for (const attribute in tag) {\n        if (Object.prototype.hasOwnProperty.call(tag, attribute)) {\n          if (attribute === TAG_PROPERTIES.INNER_HTML) {\n            newElement.innerHTML = tag.innerHTML;\n          } else if (attribute === TAG_PROPERTIES.CSS_TEXT) {\n            if (newElement.styleSheet) {\n              newElement.styleSheet.cssText = tag.cssText;\n            } else {\n              newElement.appendChild(document.createTextNode(tag.cssText));\n            }\n          } else {\n            const value = typeof tag[attribute] === 'undefined' ? '' : tag[attribute];\n            newElement.setAttribute(attribute, value);\n          }\n        }\n      }\n\n      newElement.setAttribute(HELMET_ATTRIBUTE, 'true');\n\n      // Remove a duplicate tag from domTagstoRemove, so it isn't cleared.\n      if (\n        oldTags.some((existingTag, index) => {\n          indexToDelete = index;\n          return newElement.isEqualNode(existingTag);\n        })\n      ) {\n        oldTags.splice(indexToDelete, 1);\n      } else {\n        newTags.push(newElement);\n      }\n    });\n  }\n\n  oldTags.forEach(tag => tag.parentNode.removeChild(tag));\n  newTags.forEach(tag => headElement.appendChild(tag));\n\n  return {\n    oldTags,\n    newTags,\n  };\n};\n\nconst updateAttributes = (tagName, attributes) => {\n  const elementTag = document.getElementsByTagName(tagName)[0];\n\n  if (!elementTag) {\n    return;\n  }\n\n  const helmetAttributeString = elementTag.getAttribute(HELMET_ATTRIBUTE);\n  const helmetAttributes = helmetAttributeString ? helmetAttributeString.split(',') : [];\n  const attributesToRemove = [].concat(helmetAttributes);\n  const attributeKeys = Object.keys(attributes);\n\n  for (let i = 0; i < attributeKeys.length; i += 1) {\n    const attribute = attributeKeys[i];\n    const value = attributes[attribute] || '';\n\n    if (elementTag.getAttribute(attribute) !== value) {\n      elementTag.setAttribute(attribute, value);\n    }\n\n    if (helmetAttributes.indexOf(attribute) === -1) {\n      helmetAttributes.push(attribute);\n    }\n\n    const indexToSave = attributesToRemove.indexOf(attribute);\n    if (indexToSave !== -1) {\n      attributesToRemove.splice(indexToSave, 1);\n    }\n  }\n\n  for (let i = attributesToRemove.length - 1; i >= 0; i -= 1) {\n    elementTag.removeAttribute(attributesToRemove[i]);\n  }\n\n  if (helmetAttributes.length === attributesToRemove.length) {\n    elementTag.removeAttribute(HELMET_ATTRIBUTE);\n  } else if (elementTag.getAttribute(HELMET_ATTRIBUTE) !== attributeKeys.join(',')) {\n    elementTag.setAttribute(HELMET_ATTRIBUTE, attributeKeys.join(','));\n  }\n};\n\nconst updateTitle = (title, attributes) => {\n  if (typeof title !== 'undefined' && document.title !== title) {\n    document.title = flattenArray(title);\n  }\n\n  updateAttributes(TAG_NAMES.TITLE, attributes);\n};\n\nconst commitTagChanges = (newState, cb) => {\n  const {\n    baseTag,\n    bodyAttributes,\n    htmlAttributes,\n    linkTags,\n    metaTags,\n    noscriptTags,\n    onChangeClientState,\n    scriptTags,\n    styleTags,\n    title,\n    titleAttributes,\n  } = newState;\n  updateAttributes(TAG_NAMES.BODY, bodyAttributes);\n  updateAttributes(TAG_NAMES.HTML, htmlAttributes);\n\n  updateTitle(title, titleAttributes);\n\n  const tagUpdates = {\n    baseTag: updateTags(TAG_NAMES.BASE, baseTag),\n    linkTags: updateTags(TAG_NAMES.LINK, linkTags),\n    metaTags: updateTags(TAG_NAMES.META, metaTags),\n    noscriptTags: updateTags(TAG_NAMES.NOSCRIPT, noscriptTags),\n    scriptTags: updateTags(TAG_NAMES.SCRIPT, scriptTags),\n    styleTags: updateTags(TAG_NAMES.STYLE, styleTags),\n  };\n\n  const addedTags = {};\n  const removedTags = {};\n\n  Object.keys(tagUpdates).forEach(tagType => {\n    const { newTags, oldTags } = tagUpdates[tagType];\n\n    if (newTags.length) {\n      addedTags[tagType] = newTags;\n    }\n    if (oldTags.length) {\n      removedTags[tagType] = tagUpdates[tagType].oldTags;\n    }\n  });\n\n  if (cb) {\n    cb();\n  }\n\n  onChangeClientState(newState, addedTags, removedTags);\n};\n\n// eslint-disable-next-line\nlet _helmetCallback = null;\n\nconst handleStateChangeOnClient = newState => {\n  if (_helmetCallback) {\n    cancelAnimationFrame(_helmetCallback);\n  }\n\n  if (newState.defer) {\n    _helmetCallback = requestAnimationFrame(() => {\n      commitTagChanges(newState, () => {\n        _helmetCallback = null;\n      });\n    });\n  } else {\n    commitTagChanges(newState);\n    _helmetCallback = null;\n  }\n};\n\nexport default handleStateChangeOnClient;\n","import { Component } from 'react';\nimport shallowEqual from 'shallowequal';\nimport handleStateChangeOnClient from './client';\nimport mapStateOnServer from './server';\nimport { reducePropsToState } from './utils';\nimport Provider, { providerShape } from './Provider';\n\nexport default class Dispatcher extends Component {\n  static propTypes = {\n    context: providerShape.isRequired,\n  };\n\n  static displayName = 'HelmetDispatcher';\n\n  rendered = false;\n\n  shouldComponentUpdate(nextProps) {\n    return !shallowEqual(nextProps, this.props);\n  }\n\n  componentDidUpdate() {\n    this.emitChange();\n  }\n\n  componentWillUnmount() {\n    const { helmetInstances } = this.props.context;\n    helmetInstances.remove(this);\n    this.emitChange();\n  }\n\n  emitChange() {\n    const { helmetInstances, setHelmet } = this.props.context;\n    let serverState = null;\n    const state = reducePropsToState(\n      helmetInstances.get().map(instance => {\n        const props = { ...instance.props };\n        delete props.context;\n        return props;\n      })\n    );\n    if (Provider.canUseDOM) {\n      handleStateChangeOnClient(state);\n    } else if (mapStateOnServer) {\n      serverState = mapStateOnServer(state);\n    }\n    setHelmet(serverState);\n  }\n\n  // componentWillMount will be deprecated\n  // for SSR, initialize on first render\n  // constructor is also unsafe in StrictMode\n  init() {\n    if (this.rendered) {\n      return;\n    }\n\n    this.rendered = true;\n\n    const { helmetInstances } = this.props.context;\n    helmetInstances.add(this);\n    this.emitChange();\n  }\n\n  render() {\n    this.init();\n\n    return null;\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport fastCompare from 'react-fast-compare';\nimport invariant from 'invariant';\nimport { Context } from './Provider';\nimport Dispatcher from './Dispatcher';\nimport { TAG_NAMES, VALID_TAG_NAMES, HTML_TAG_MAP } from './constants';\n\nexport { default as HelmetProvider } from './Provider';\n\n/* eslint-disable class-methods-use-this */\n\nexport class Helmet extends Component {\n  /**\n   * @param {Object} base: {\"target\": \"_blank\", \"href\": \"http://mysite.com/\"}\n   * @param {Object} bodyAttributes: {\"className\": \"root\"}\n   * @param {String} defaultTitle: \"Default Title\"\n   * @param {Boolean} defer: true\n   * @param {Boolean} encodeSpecialCharacters: true\n   * @param {Object} htmlAttributes: {\"lang\": \"en\", \"amp\": undefined}\n   * @param {Array} link: [{\"rel\": \"canonical\", \"href\": \"http://mysite.com/example\"}]\n   * @param {Array} meta: [{\"name\": \"description\", \"content\": \"Test description\"}]\n   * @param {Array} noscript: [{\"innerHTML\": \"<img src='http://mysite.com/js/test.js'\"}]\n   * @param {Function} onChangeClientState: \"(newState) => console.log(newState)\"\n   * @param {Array} script: [{\"type\": \"text/javascript\", \"src\": \"http://mysite.com/js/test.js\"}]\n   * @param {Array} style: [{\"type\": \"text/css\", \"cssText\": \"div { display: block; color: blue; }\"}]\n   * @param {String} title: \"Title\"\n   * @param {Object} titleAttributes: {\"itemprop\": \"name\"}\n   * @param {String} titleTemplate: \"MySite.com - %s\"\n   * @param {Boolean} prioritizeSeoTags: false\n   */\n  /* eslint-disable react/forbid-prop-types, react/require-default-props */\n  static propTypes = {\n    base: PropTypes.object,\n    bodyAttributes: PropTypes.object,\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n    defaultTitle: PropTypes.string,\n    defer: PropTypes.bool,\n    encodeSpecialCharacters: PropTypes.bool,\n    htmlAttributes: PropTypes.object,\n    link: PropTypes.arrayOf(PropTypes.object),\n    meta: PropTypes.arrayOf(PropTypes.object),\n    noscript: PropTypes.arrayOf(PropTypes.object),\n    onChangeClientState: PropTypes.func,\n    script: PropTypes.arrayOf(PropTypes.object),\n    style: PropTypes.arrayOf(PropTypes.object),\n    title: PropTypes.string,\n    titleAttributes: PropTypes.object,\n    titleTemplate: PropTypes.string,\n    prioritizeSeoTags: PropTypes.bool,\n  };\n  /* eslint-enable react/prop-types, react/forbid-prop-types, react/require-default-props */\n\n  static defaultProps = {\n    defer: true,\n    encodeSpecialCharacters: true,\n    prioritizeSeoTags: false,\n  };\n\n  static displayName = 'Helmet';\n\n  shouldComponentUpdate(nextProps) {\n    return !fastCompare(this.props, nextProps);\n  }\n\n  mapNestedChildrenToProps(child, nestedChildren) {\n    if (!nestedChildren) {\n      return null;\n    }\n\n    switch (child.type) {\n      case TAG_NAMES.SCRIPT:\n      case TAG_NAMES.NOSCRIPT:\n        return {\n          innerHTML: nestedChildren,\n        };\n\n      case TAG_NAMES.STYLE:\n        return {\n          cssText: nestedChildren,\n        };\n      default:\n        throw new Error(\n          `<${child.type} /> elements are self-closing and can not contain children. Refer to our API for more information.`\n        );\n    }\n  }\n\n  flattenArrayTypeChildren({ child, arrayTypeChildren, newChildProps, nestedChildren }) {\n    return {\n      ...arrayTypeChildren,\n      [child.type]: [\n        ...(arrayTypeChildren[child.type] || []),\n        {\n          ...newChildProps,\n          ...this.mapNestedChildrenToProps(child, nestedChildren),\n        },\n      ],\n    };\n  }\n\n  mapObjectTypeChildren({ child, newProps, newChildProps, nestedChildren }) {\n    switch (child.type) {\n      case TAG_NAMES.TITLE:\n        return {\n          ...newProps,\n          [child.type]: nestedChildren,\n          titleAttributes: { ...newChildProps },\n        };\n\n      case TAG_NAMES.BODY:\n        return {\n          ...newProps,\n          bodyAttributes: { ...newChildProps },\n        };\n\n      case TAG_NAMES.HTML:\n        return {\n          ...newProps,\n          htmlAttributes: { ...newChildProps },\n        };\n      default:\n        return {\n          ...newProps,\n          [child.type]: { ...newChildProps },\n        };\n    }\n  }\n\n  mapArrayTypeChildrenToProps(arrayTypeChildren, newProps) {\n    let newFlattenedProps = { ...newProps };\n\n    Object.keys(arrayTypeChildren).forEach(arrayChildName => {\n      newFlattenedProps = {\n        ...newFlattenedProps,\n        [arrayChildName]: arrayTypeChildren[arrayChildName],\n      };\n    });\n\n    return newFlattenedProps;\n  }\n\n  warnOnInvalidChildren(child, nestedChildren) {\n    invariant(\n      VALID_TAG_NAMES.some(name => child.type === name),\n      typeof child.type === 'function'\n        ? `You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.`\n        : `Only elements types ${VALID_TAG_NAMES.join(\n            ', '\n          )} are allowed. Helmet does not support rendering <${\n            child.type\n          }> elements. Refer to our API for more information.`\n    );\n\n    invariant(\n      !nestedChildren ||\n        typeof nestedChildren === 'string' ||\n        (Array.isArray(nestedChildren) &&\n          !nestedChildren.some(nestedChild => typeof nestedChild !== 'string')),\n      `Helmet expects a string as a child of <${child.type}>. Did you forget to wrap your children in braces? ( <${child.type}>{\\`\\`}</${child.type}> ) Refer to our API for more information.`\n    );\n\n    return true;\n  }\n\n  mapChildrenToProps(children, newProps) {\n    let arrayTypeChildren = {};\n\n    React.Children.forEach(children, child => {\n      if (!child || !child.props) {\n        return;\n      }\n\n      const { children: nestedChildren, ...childProps } = child.props;\n      // convert React props to HTML attributes\n      const newChildProps = Object.keys(childProps).reduce((obj, key) => {\n        obj[HTML_TAG_MAP[key] || key] = childProps[key];\n        return obj;\n      }, {});\n\n      let { type } = child;\n      if (typeof type === 'symbol') {\n        type = type.toString();\n      } else {\n        this.warnOnInvalidChildren(child, nestedChildren);\n      }\n\n      switch (type) {\n        case TAG_NAMES.FRAGMENT:\n          newProps = this.mapChildrenToProps(nestedChildren, newProps);\n          break;\n\n        case TAG_NAMES.LINK:\n        case TAG_NAMES.META:\n        case TAG_NAMES.NOSCRIPT:\n        case TAG_NAMES.SCRIPT:\n        case TAG_NAMES.STYLE:\n          arrayTypeChildren = this.flattenArrayTypeChildren({\n            child,\n            arrayTypeChildren,\n            newChildProps,\n            nestedChildren,\n          });\n          break;\n\n        default:\n          newProps = this.mapObjectTypeChildren({\n            child,\n            newProps,\n            newChildProps,\n            nestedChildren,\n          });\n          break;\n      }\n    });\n\n    return this.mapArrayTypeChildrenToProps(arrayTypeChildren, newProps);\n  }\n\n  render() {\n    const { children, ...props } = this.props;\n    let newProps = { ...props };\n\n    if (children) {\n      newProps = this.mapChildrenToProps(children, newProps);\n    }\n\n    return (\n      <Context.Consumer>\n        {(\n          context // eslint-disable-next-line react/jsx-props-no-spreading\n        ) => <Dispatcher {...newProps} context={context} />}\n      </Context.Consumer>\n    );\n  }\n}\n"],"names":["TAG_PROPERTIES","ATTRIBUTE_NAMES","TAG_NAMES","BASE","BODY","HEAD","HTML","LINK","META","NOSCRIPT","SCRIPT","STYLE","TITLE","FRAGMENT","SEO_PRIORITY_TAGS","rel","type","charset","name","property","VALID_TAG_NAMES","Object","keys","map","REACT_TAG_MAP","accesskey","class","contenteditable","contextmenu","itemprop","tabindex","HTML_TAG_MAP","reduce","obj","key","HELMET_ATTRIBUTE","getInnermostProperty","propsList","i","length","props","prototype","hasOwnProperty","call","getTitleFromPropsList","innermostTitle","innermostTemplate","Array","isArray","join","replace","innermostDefaultTitle","undefined","getOnChangeClientState","getAttributesFromPropsList","tagType","filter","tagAttrs","current","getBaseTagFromPropsList","primaryAttributes","reverse","innermostBaseTag","tag","lowerCaseAttributeKey","toLowerCase","indexOf","concat","getTagsFromPropsList","tagName","approvedSeenTags","console","warn","approvedTags","instanceTags","instanceSeenTags","primaryAttributeKey","attributeKey","value","forEach","push","tagUnion","getAnyTrueFromPropsList","checkedTag","index","flattenArray","possibleArray","prioritizer","elementsList","propsToMatch","acc","elementAttrs","toMatch","includes","checkIfPropsMatch","priority","default","SELF_CLOSING_TAGS","encodeSpecialCharacters","str","encode","String","generateElementAttributesAsString","attributes","attr","convertElementAttributesToReactProps","initProps","generateTagsAsReactComponent","tags","mappedTag","attribute","mappedAttribute","dangerouslySetInnerHTML","__html","innerHTML","cssText","React","createElement","getMethodsForTag","toComponent","titleAttributes","title","toString","attributeString","flattenedTitle","generateTitleAsString","attributeHtml","string","tagContent","isSelfClosing","generateTagsAsString","mapStateOnServer","baseTag","bodyAttributes","htmlAttributes","noscriptTags","styleTags","linkTags","metaTags","scriptTags","priorityMethods","prioritizeSeoTags","meta","link","script","getPriorityMethods","base","noscript","style","Context","createContext","providerShape","PropTypes","shape","setHelmet","func","helmetInstances","get","add","remove","canUseDOM","document","Provider","_this","instances","serverState","context","helmet","instance","splice","render","this","children","Component","propTypes","node","isRequired","defaultProps","displayName","updateTags","indexToDelete","headElement","head","querySelector","tagNodes","querySelectorAll","oldTags","slice","newTags","newElement","styleSheet","appendChild","createTextNode","setAttribute","some","existingTag","isEqualNode","parentNode","removeChild","updateAttributes","elementTag","getElementsByTagName","helmetAttributeString","getAttribute","helmetAttributes","split","attributesToRemove","attributeKeys","indexToSave","removeAttribute","commitTagChanges","newState","cb","onChangeClientState","updateTitle","tagUpdates","addedTags","removedTags","_helmetCallback","Dispatcher","rendered","shouldComponentUpdate","nextProps","shallowEqual","componentDidUpdate","emitChange","componentWillUnmount","state","defer","cancelAnimationFrame","requestAnimationFrame","init","Helmet","fastCompare","mapNestedChildrenToProps","child","nestedChildren","Error","flattenArrayTypeChildren","arrayTypeChildren","newChildProps","mapObjectTypeChildren","newProps","mapArrayTypeChildrenToProps","newFlattenedProps","arrayChildName","warnOnInvalidChildren","invariant","nestedChild","mapChildrenToProps","Children","childProps","Consumer","object","oneOfType","arrayOf","defaultTitle","bool","titleTemplate"],"mappings":"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"}