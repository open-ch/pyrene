@import '../../styles/colors.css';

.tableContainer {
  composes: commonFontSettings from '../../styles/common.css';
  width: 100%;
  position: relative;

  & .loading {
    opacity: .5;
    pointer-events: none;
  }

  & .disabled {
    opacity: .5;
    pointer-events: none;
  }
}

.loader {
  padding: 32px 0 0 8px;
}

.tableAndActions {
  position: relative;

}

.selectedRow {
  background-color: var(--secondary);
}

.titleBar {
  margin-bottom: 24px;
  font-size: 16px;
  font-weight: 600;
  line-height: 1.5;
  color: var(--text);
}

.filterContainer {
  margin-bottom: 8px;
}

.filterBar {
  display: flex;
  justify-content: space-between;
}

.toolbar {
  position: absolute;
  z-index: 1;
  top: 8px;
  display: flex;
}

.spacer {
  width: 16px;
}

.customTableBody {
  composes: commonFontSettings from '../../styles/common.css';

  padding: 39px 0 0 8px;
  font-size: 12px;
  font-weight: normal;
  font-style: italic;
  font-stretch: normal;
  line-height: normal;
  letter-spacing: normal;
  color: var(--neutral-500);
}

.banner {
  padding: 39px 0 39px 8px;
}


/*
   Search field: \..*(?=\{)
   Replace field: :global($0)
*/

:global(.ReactTable) {
  position: relative;
  display: flex;
  flex-direction: column;

  font-size: 12px;
  font-weight: normal;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  letter-spacing: normal;
  color: var(--text);
}

:global(.ReactTable *) {
  box-sizing: border-box;
}

:global(.ReactTable .rt-table) {
  flex: auto 1;
  display: flex;
  flex-direction: column;
  align-items: stretch;
  width: 100%;
  border-collapse: collapse;
  overflow: auto;
}

:global(.ReactTable .rt-thead) {
  flex: 1 0 auto;
  display: flex;
  flex-direction: column;
  user-select: none;
}

:global(.ReactTable .rt-thead .rt-th) {
  height: 32px;
  font-weight: 600;
  display: flex;
  align-items: center;
  justify-content: flex-start;
}

:global(.ReactTable .rt-thead.-headerGroups) {
  background: rgba(0, 0, 0, 0.03);
  border-bottom: 1px solid rgba(0, 0, 0, 0.05)
}

:global(.ReactTable .rt-thead.-filters) {
  border-bottom: 1px solid rgba(0, 0, 0, 0.05);
}

:global(.ReactTable .rt-thead.-filters input, .ReactTable .rt-thead.-filters select) {
  border: 1px solid rgba(0, 0, 0, 0.1);
  background: #fff;
  padding: 5px 7px;
  border-radius: 3px;
  outline: none;
}

:global(.ReactTable .rt-thead.-filters .rt-th) {
  border-right: 1px solid rgba(0, 0, 0, 0.02);
}

:global(.ReactTable .rt-thead.-header) {
  box-shadow: inset 0 -1px 0 0 var(--border);
}

:global(.ReactTable .rt-thead .rt-tr) {
  text-align: center;
}

:global(.ReactTable .rt-thead .rt-th, .ReactTable .rt-thead .rt-td) {
  padding: 5px 5px;
  line-height: normal;
  position: relative;
  border-right: 1px solid rgba(0, 0, 0, 0.05);
  transition: box-shadow .3s cubic-bezier(.175, .885, .32, 1.275);
  box-shadow: inset 0 0 0 0 transparent;
}

:global(.ReactTable .rt-thead .rt-th.-sort-asc, .ReactTable .rt-thead .rt-td.-sort-asc) {
  box-shadow: inset 0 3px 0 0 rgba(0, 0, 0, 0.6);
}

:global(.ReactTable .rt-thead .rt-th.-sort-desc, .ReactTable .rt-thead .rt-td.-sort-desc) {
  box-shadow: inset 0 -3px 0 0 rgba(0, 0, 0, 0.6);
}

:global(.ReactTable .rt-thead .rt-th.-cursor-pointer, .ReactTable .rt-thead .rt-td.-cursor-pointer) {
  cursor: pointer;
}

:global(.ReactTable .rt-thead .rt-th:last-child, .ReactTable .rt-thead .rt-td:last-child) {
  border-right: 0;
}

:global(.ReactTable .rt-thead .rt-resizable-header) {
  overflow: visible;
}

:global(.ReactTable .rt-thead .rt-resizable-header:last-child) {
  overflow: hidden;
}

:global(.ReactTable .rt-thead .rt-resizable-header-content) {
  overflow: hidden;
  text-overflow: ellipsis;
}

:global(.ReactTable .rt-thead .rt-header-pivot) {
  border-right-color: #f7f7f7;
}

:global(.ReactTable .rt-thead .rt-header-pivot:after, .ReactTable .rt-thead .rt-header-pivot:before) {
  left: 100%;
  top: 50%;
  border: solid transparent;
  content: " ";
  height: 0;
  width: 0;
  position: absolute;
  pointer-events: none;
}

:global(.ReactTable .rt-thead .rt-header-pivot:after) {
  border-color: rgba(255, 255, 255, 0);
  border-left-color: #fff;
  border-width: 8px;
  margin-top: -8px;
}

:global(.ReactTable .rt-thead .rt-header-pivot:before) {
  border-color: rgba(102, 102, 102, 0);
  border-left-color: #f7f7f7;
  border-width: 10px;
  margin-top: -10px;
}

:global(.ReactTable .rt-tbody) {
  flex: 99999 1 auto;
  display: flex;
  flex-direction: column;
  overflow: auto;
}

:global(.ReactTable .rt-tbody .rt-tr-group) {
  border-bottom: solid 1px var(--border);
  height: 32px;
  min-height: 32px;
}

/*:global(.ReactTable .rt-tbody .rt-tr-group:last-child) {
  border-bottom: 0;
}*/

:global(.ReactTable .rt-tbody .rt-td) {
  padding-right: 16px;
  display: flex;
  justify-content: flex-start;
  align-items: center;
}

:global(.ReactTable .rt-td:first-child) {
  padding-left: 8px;
}

:global(.ReactTable .rt-tbody .rt-td:last-child) {
  padding-right: 8px;
}

:global(.ReactTable .rt-tbody .rt-expandable) {
  cursor: pointer;
  text-overflow: clip;
}

:global(.ReactTable .rt-tr-group) {
  flex: 1 0 auto;
  display: flex;
  flex-direction: column;
  align-items: stretch;
}

:global(.ReactTable .rt-tr) {
  flex: 1 0 auto;
  display: inline-flex;
  min-height: 31px;
}

:global(.ReactTable .rt-th, .ReactTable .rt-td) {
  flex: 1 0 0;
  white-space: nowrap;
  text-overflow: ellipsis;
  padding: 7px 5px;
  overflow: hidden;
  transition: .3s ease;
  transition-property: width, min-width, padding, opacity;
}

:global(.ReactTable .rt-th.-hidden, .ReactTable .rt-td.-hidden) {
  width: 0 !important;
  min-width: 0 !important;
  padding: 0 !important;
  border: 0 !important;
  opacity: 0 !important;
}

:global(.ReactTable .rt-expander) {
  display: inline-block;
  position: relative;
  color: transparent;
  margin: 0 10px;
}

:global(.ReactTable .rt-expander:after) {
  content: '';
  position: absolute;
  width: 0;
  height: 0;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) rotate(-90deg);
  border-left: 5.04px solid transparent;
  border-right: 5.04px solid transparent;
  border-top: 7px solid rgba(0, 0, 0, 0.8);
  transition: all .3s cubic-bezier(.175, .885, .32, 1.275);
  cursor: pointer;
}

:global(.ReactTable .rt-expander.-open:after) {
  transform: translate(-50%, -50%) rotate(0);
}

:global(.ReactTable .rt-resizer) {
  display: inline-block;
  position: absolute;
  width: 36px;
  top: 0;
  bottom: 0;
  right: -18px;
  cursor: col-resize;
  z-index: 10;
}

:global(.ReactTable .rt-tfoot) {
  flex: 1 0 auto;
  display: flex;
  flex-direction: column;
  box-shadow: 0 0 15px 0 rgba(0, 0, 0, 0.15);
}

:global(.ReactTable .rt-tfoot .rt-td) {
  border-right: 1px solid rgba(0, 0, 0, 0.05);
}

:global(.ReactTable .rt-tfoot .rt-td:last-child) {
  border-right: 0;
}

:global(.ReactTable.-striped .rt-tr.-odd) {
  background: rgba(0, 0, 0, 0.03);
}

:global(.ReactTable .rt-tbody .rt-tr:not(.-padRow):hover) {
  background-color: var(--background-tint);
}

:global(.ReactTable .-pagination) {
  z-index: 1;
  display: flex;
  justify-content: space-between;
  align-items: stretch;
  flex-wrap: wrap;
  padding: 3px;
  box-shadow: 0 0 15px 0 rgba(0, 0, 0, 0.1);
  border-top: 2px solid rgba(0, 0, 0, 0.1);
}

:global(.ReactTable .-pagination input, .ReactTable .-pagination select) {
  border: 1px solid rgba(0, 0, 0, 0.1);
  background: #fff;
  padding: 5px 7px;
  font-size: inherit;
  border-radius: 3px;
  font-weight: normal;
  outline: none;
}

:global(.ReactTable .-pagination .-btn) {
  appearance: none;
  display: block;
  width: 100%;
  height: 100%;
  border: 0;
  border-radius: 3px;
  padding: 6px;
  font-size: 1em;
  color: rgba(0, 0, 0, 0.6);
  background: rgba(0, 0, 0, 0.1);
  transition: all .1s ease;
  cursor: pointer;
  outline: none;
}

:global(.ReactTable .-pagination .-btn[disabled]) {
  opacity: .5;
  cursor: default;
}

:global(.ReactTable .-pagination .-btn:not([disabled]):hover) {
  background: rgba(0, 0, 0, 0.3);
  color: #fff;
}

:global(.ReactTable .-pagination .-previous, .ReactTable .-pagination .-next) {
  flex: 1;
  text-align: center;
}

:global(.ReactTable .-pagination .-center) {
  flex: 1.5;
  text-align: center;
  margin-bottom: 0;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  align-items: center;
  justify-content: space-around;
}

:global(.ReactTable .-pagination .-pageInfo) {
  display: inline-block;
  margin: 3px 10px;
  white-space: nowrap;
}

:global(.ReactTable .-pagination .-pageJump) {
  display: inline-block;
}

:global(.ReactTable .-pagination .-pageJump input) {
  width: 70px;
  text-align: center;
}

:global(.ReactTable .-pagination .-pageSizeOptions) {
  margin: 3px 10px;
}

:global(.ReactTable .rt-noData) {
  display: block;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  background: rgba(255, 255, 255, 0.8);
  transition: all .3s ease;
  z-index: 1;
  pointer-events: none;
  padding: 20px;
  color: rgba(0, 0, 0, 0.5);
}

:global(.ReactTable .-loading) {
  display: block;
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  background: rgba(255, 255, 255, 0.8);
  transition: all .3s ease;
  z-index: -1;
  opacity: 0;
  pointer-events: none;
}

:global(.ReactTable .-loading > div) {
  position: absolute;
  display: block;
  text-align: center;
  width: 100%;
  top: 50%;
  left: 0;
  font-size: 15px;
  color: rgba(0, 0, 0, 0.6);
  transform: translateY(-52%);
  transition: all .3s cubic-bezier(.25, .46, .45, .94);
}

:global(.ReactTable .-loading.-active) {
  opacity: 1;
  z-index: 2;
  pointer-events: all;
}

:global(.ReactTable .-loading.-active > div) {
  transform: translateY(50%);
}

:global(.ReactTable .rt-resizing .rt-th, .ReactTable .rt-resizing .rt-td) {
  transition: none !important;
  cursor: col-resize;
  user-select: none;
}

:global(.ReactTable .-cursor-pointer) {
  cursor: pointer;
}
